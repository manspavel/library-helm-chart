{{ define "library-helm-chart.deployment" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  annotations:
{{/*
    # Temporarily commented out. until better times
    # Uncomment when applications are ready to automatically restart

    configmap.reloader.stakater.com/reload: "{{ .Chart.Name }}-common-envs,{{ .Chart.Name }}-rr,{{ .Chart.Name }}-rr-console"
    secret.reloader.stakater.com/reload: "{{ .Chart.Name }}-envs"
*/}}
  labels:
    app: {{ .Chart.Name }}
    {{ if .Values.podLabels }}
    {{ toYaml .Values.podLabels | nindent 4 }}
    {{ end }}
spec:
{{- if eq .Values.strategyType "Recreate" }}
  strategy:
    type: Recreate
{{- end }}
{{- if not .Values.autoscaling }}
  replicas: {{ .Values.replicaCount | default "1" }}
{{- end }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        {{ if .Values.podAnnotations }}
        {{ toYaml .Values.podAnnotations | nindent 8 }}
        {{ end }}
      labels:
        app: {{ .Chart.Name }}
        {{ if .Values.podLabels }}
        {{ toYaml .Values.podLabels | nindent 8 }}
        {{ end }}
    spec:
      imagePullSecrets:
      - name: registrysecret
      serviceAccountName: {{ .Chart.Name }}
      securityContext:
        runAsUser: 3000
        runAsGroup: 3000
        fsGroup: 3000
      initContainers:
{{- if .Values.accessTo.postgres }}
        - name: wait-postgres
          image: alpine:3.16
          command: ["/bin/sh", "-c", "while ! nc -w 1 -z acid-postgres-pooler.postgresql.svc.cluster.local 5432; do sleep 2; done"]
{{- end }}
{{- if .Values.accessTo.rabbitmq }}
        - name: wait-rabbitmq
          image: alpine:3.16
          command: ["/bin/sh", "-c", "while ! nc -w 1 -z rabbitmq.rabbitmq.svc.cluster.local 5672; do sleep 2; done"]
{{- end }}
{{- if .Values.accessTo.redis }}
        - name: wait-redis
          image: alpine:3.16
          command: ["/bin/sh", "-c", "while ! nc -w 1 -z redis-master.redis.svc.cluster.local 6379; do sleep 2; done"]
{{- end }}

{{- range .Values.initContainers }}
        - name: {{ .name }}
          {{ if kindIs "string" .command }}
          command: {{ .command | splitList " " | toYaml | nindent 10 }}
          {{ else if kindIs "slice" .command }}
          command: {{ .command | toYaml | nindent 10 }}
          {{ end }}
          {{- if .image }}
          image: {{ .image }}
          {{- else }}
          image: {{ pluck "app" $.Values.werf.image | first }}
          {{- end }}
          {{- if .workingDir }}
          workingDir: {{ .workingDir }}
          {{- else }}
          workingDir: /app
          {{- end }}
          imagePullPolicy: "Always"
          env:
          {{- if .envs }}
            {{- toYaml .envs | nindent 14 }}
          {{- end }}
          envFrom:
          {{- if $.Values.envs }}
          - configMapRef:
              name: {{ $.Chart.Name }}-common-envs
          {{- end }}
          - secretRef:
              name: {{ $.Chart.Name }}-envs
          {{- if or .volumeMounts $.Values.volumeMounts }}
          volumeMounts:
          {{- if .volumeMounts }}
          {{- toYaml .volumeMounts | nindent 12 }}
          {{- end }}
          {{- if $.Values.volumeMounts }}
          {{- toYaml $.Values.volumeMounts | nindent 12 }}
          {{- end }}
          {{- end }}
{{- end }}

      containers:
{{- range .Values.containers }}
        - name: {{ .name }}
          securityContext:
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 3000
          {{- if .command }}
          {{ if kindIs "string" .command }}
          command: {{ .command | splitList " " | toYaml | nindent 6 }}
          {{ else if kindIs "slice" .command }}
          command: {{ .command | toYaml | nindent 6 }}
          {{ end }}
          {{- end }}
          {{- if .image }}
          image: {{ .image }}
          {{- else }}
          image: {{ pluck .name $.Values.werf.image | first }}
          {{- end }}
          {{- if .workingDir }}
          workingDir: {{ .workingDir }}
          {{- else }}
          workingDir: /app
          {{- end }}
          imagePullPolicy: "IfNotPresent"
          {{- if .livenessProbe }}
          livenessProbe:
            {{- toYaml .livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .readinessProbe }}
          readinessProbe:
            {{- toYaml .readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .resources }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          {{- end }}
          env:
          {{- if .envs }}
            {{- toYaml .envs | nindent 12 }}
          {{- end }}
          envFrom:
          {{- if $.Values.envs }}
          - configMapRef:
              name: {{ $.Chart.Name }}-common-envs
          {{- end }}
          - secretRef:
              name: {{ $.Chart.Name }}-envs
          {{- if or .volumeMounts $.Values.volumeMounts }}
          volumeMounts:
          {{- if .volumeMounts }}
            {{- toYaml .volumeMounts | nindent 12 }}
          {{- end }}
          {{- if $.Values.volumeMounts }}
            {{- toYaml $.Values.volumeMounts | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .preStop }}
          lifecycle:
            preStop:
              exec:
              {{ if kindIs "string" .preStop.command }}
                command: {{ .preStop.command | splitList " " | toYaml | nindent 16 }}
              {{ else if kindIs "slice" .preStop.command }}
                command: {{ .preStop.command | toYaml | nindent 16 }}
              {{ end }}
            {{- end }}
{{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: vke.vultr.com/node-pool
                operator: In
                values:
                - applications
      {{- if .Values.volumes }}
      volumes:
        {{- toYaml .Values.volumes | nindent 8 }}
      {{- end }}
{{ end }}